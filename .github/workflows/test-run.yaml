name: Docker Compose Actions Workflow
on:
  push:
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    env:
      DS_FRIENDS_NEARBY_DB: ${{ secrets.DS_FRIENDS_NEARBY_DB }}
      DS_FRIENDS_NEARBY_PASSWORD: ${{ secrets.DS_FRIENDS_NEARBY_PASSWORD }}
      DS_FRIENDS_NEARBY_URL: ${{ secrets.DS_FRIENDS_NEARBY_URL }}
      DS_FRIENDS_NEARBY_USERNAME: ${{ secrets.DS_FRIENDS_NEARBY_USERNAME }}
      MONGODB_AUTH_DB: ${{ secrets.MONGODB_AUTH_DB }}
      MONGODB_DB: ${{ secrets.MONGODB_DB }}
      MONGODB_HOST: ${{ secrets.MONGODB_HOST }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
      NEO4J_URI: ${{ secrets.NEO4J_URI }}
      NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      RSA_PRIVATE: ${{ secrets.RSA_PRIVATE }}
      RSA_PUBLIC: ${{ secrets.RSA_PUBLIC }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - uses: actions/checkout@v2
      - name: Build the stack
        run: docker compose up -d

      - name: Build and run Unit/Integration Tests with Maven
        run: mvn test

      - name: Stop and remove Docker Compose containers
        run: docker compose down
